{"version":3,"sources":["../../src/validation/validateemailrequest.js"],"names":["isEmpty","value","undefined","length","isValidEmail","email","re","test","String","toLowerCase","emailValidationErrorMessage","contentAndSubjectValidationErrorMessage","payloadValidationErrorMessage","validation","rawEmailPayload","Array","isArray","toAddress","content","subject","i","element","console","log","santizedData","module","exports","Promise","resolve","reject"],"mappings":"AAAA,MAAMA,UAAWC,KAAD,IAAW;AACvB,WAAQA,UAAUC,SAAV,IAAuBD,SAAS,IAAhC,IAAwCA,MAAME,MAAN,IAAgB,CAAzD,GAA8D,IAA9D,GAAqE,KAA5E;AACH,CAFD;;AAIA,MAAMC,eAAgBC,KAAD,IAAW;AAC5B,QAAIC,KAAK,yJAAT;AACA,WAAOA,GAAGC,IAAH,CAAQC,OAAOH,KAAP,EAAcI,WAAd,EAAR,CAAP;AACH,CAHD;;AAKA,MAAMC,8BAA8B,gDAApC;AACA,MAAMC,0CAA0C,gDAAhD;AACA,MAAMC,gCAAgC,mCAAtC;;AAEA,MAAMC,aAAcC,eAAD,IAAqB;;AAEpC,QAAGd,QAAQc,eAAR,CAAH,EAA4B;AACxB,eAAO;AACH,uBAAW,KADR;AAEH,oBAAQ,IAFL;AAGH,qBAASF;AAHN,SAAP;AAKH;;AAED,QAAG,CAACG,MAAMC,OAAN,CAAcF,gBAAgBG,SAA9B,CAAJ,EAA6C;AACzC,eAAO;AACH,uBAAW,KADR;AAEH,oBAAQ,IAFL;AAGH,qBAASP;AAHN,SAAP;AAKH;;AAED,QAAGV,QAAQc,gBAAgBI,OAAxB,KAAoClB,QAAQc,gBAAgBK,OAAxB,CAAvC,EAAwE;AACpE,eAAO;AACH,uBAAW,KADR;AAEH,oBAAQ,IAFL;AAGH,qBAASR;AAHN,SAAP;AAKH;;AAED,SAAI,IAAIS,IAAE,CAAV,EAAaA,IAAEN,gBAAgBG,SAAhB,CAA0Bd,MAAzC,EAAiDiB,GAAjD,EAAsD;AAClD,YAAIC,UAAUP,gBAAgBG,SAAhB,CAA0BG,CAA1B,CAAd;AACA,YAAG,CAAChB,aAAaiB,OAAb,CAAJ,EAA0B;AACtBC,oBAAQC,GAAR,CAAa,aAAYF,OAAQ,EAAjC;AACA,mBAAO;AACH,2BAAW,KADR;AAEH,wBAAQ,IAFL;AAGH,yBAASX;AAHN,aAAP;AAKH;AACJ;;AAED,QAAIc,eAAe;AACf,qBAAaV,gBAAgBG,SADd;AAEf,mBAAWH,gBAAgBI,OAFZ;AAGf,mBAAWJ,gBAAgBK;AAHZ,KAAnB;;AAMA,WAAO;AACH,mBAAW,IADR;AAEH,gBAAQK;AAFL,KAAP;AAIH,CAhDD;;AAmDAC,OAAOC,OAAP,GAAiB,UAASZ,eAAT,EAA0B;AACvC,WAAO,IAAIa,OAAJ,CAAY,UAASC,OAAT,EAAkBC,MAAlB,EAAyB;AACxCD,gBAAQf,WAAWC,eAAX,CAAR;AACH,KAFM,CAAP;;AAIA;;AAGH,CARD","file":"validateemailrequest.js","sourcesContent":["const isEmpty = (value) => {\r\n    return (value === undefined || value == null || value.length <= 0) ? true : false;\r\n};\r\n\r\nconst isValidEmail = (email) => {\r\n    var re = /^(([^<>()\\[\\]\\\\.,;:\\s@\"]+(\\.[^<>()\\[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/;\r\n    return re.test(String(email).toLowerCase());\r\n};\r\n\r\nconst emailValidationErrorMessage = \"ToAddress needs to be an array of valid emails\";\r\nconst contentAndSubjectValidationErrorMessage = \"Content and subject needs value of type string\";\r\nconst payloadValidationErrorMessage = \"Send email payload can't be empty\";\r\n\r\nconst validation = (rawEmailPayload) => {\r\n\r\n    if(isEmpty(rawEmailPayload)){\r\n        return {\r\n            \"isValid\": false,\r\n            \"data\": null,\r\n            \"error\": payloadValidationErrorMessage  \r\n        };\r\n    }\r\n\r\n    if(!Array.isArray(rawEmailPayload.toAddress)){\r\n        return {\r\n            \"isValid\": false,\r\n            \"data\": null,\r\n            \"error\": emailValidationErrorMessage\r\n        };\r\n    }\r\n\r\n    if(isEmpty(rawEmailPayload.content) || isEmpty(rawEmailPayload.subject)){\r\n        return {\r\n            \"isValid\": false,\r\n            \"data\": null,\r\n            \"error\": contentAndSubjectValidationErrorMessage\r\n        };\r\n    }\r\n\r\n    for(let i=0; i<rawEmailPayload.toAddress.length; i++) { \r\n        let element = rawEmailPayload.toAddress[i];\r\n        if(!isValidEmail(element)){\r\n            console.log(`not valid ${element}`);\r\n            return {\r\n                \"isValid\": false,\r\n                \"data\": null,\r\n                \"error\": emailValidationErrorMessage\r\n            };\r\n        }\r\n    }\r\n    \r\n    let santizedData = {\r\n        \"toAddress\": rawEmailPayload.toAddress,\r\n        \"content\": rawEmailPayload.content,\r\n        \"subject\": rawEmailPayload.subject\r\n    };\r\n\r\n    return {\r\n        \"isValid\": true,\r\n        \"data\": santizedData        \r\n    };\r\n};\r\n\r\n\r\nmodule.exports = function(rawEmailPayload) {    \r\n    return new Promise(function(resolve, reject){\r\n        resolve(validation(rawEmailPayload));\r\n    });\r\n\r\n    // check rawEmailPayload for empty \r\n\r\n    \r\n};"]}