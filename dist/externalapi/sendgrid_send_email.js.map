{"version":3,"sources":["../../src/externalapi/sendgrid_send_email.js"],"names":["request","require","config","apiUrl","get","apiKey","senderEmail","senderName","getEmailBody","mail","requestSendMail","to","toAddress","forEach","item","push","personalizations","subject","content","from","JSON","stringify","module","exports","mailDetails","Promise","resolve","reject","rejectUnauthorized","headers","uri","body","method","err","res","statusCode","console","log"],"mappings":"AAAA,MAAMA,UAAUC,QAAQ,SAAR,CAAhB;AACA,MAAMC,SAASD,QAAQ,QAAR,CAAf;;AAEA,MAAME,SAASD,OAAOE,GAAP,CAAW,iBAAX,CAAf;AACA,MAAMC,SAASH,OAAOE,GAAP,CAAW,iBAAX,CAAf;AACA,MAAME,cAAc,wBAApB;AACA,MAAMC,aAAa,YAAnB;;AAEA,MAAMC,eAAgBC,IAAD,IAAU;AAC3B,QAAIC,kBAAkB,EAAtB;AACA,QAAIC,KAAK,EAAT;;AAEAF,SAAKG,SAAL,CAAeC,OAAf,CAAwBC,IAAD,IAAU;AAC7BH,WAAGI,IAAH,CAAQ,EAAE,SAASD,IAAX,EAAR;AACH,KAFD;;AAIA,QAAIE,mBAAmB,EAAvB;AACAA,qBAAiBD,IAAjB,CAAsB,EAAE,MAAMJ,EAAR,EAAY,WAAWF,KAAKQ,OAA5B,EAAtB;;AAEA,QAAIC,UAAU,EAAd;AACAA,YAAQH,IAAR,CAAa,EAAE,QAAO,YAAT,EAAuB,SAASN,KAAKS,OAArC,EAAb;;AAEAR,oBAAgBM,gBAAhB,GAAmCA,gBAAnC;AACAN,oBAAgBQ,OAAhB,GAA0BA,OAA1B;AACAR,oBAAgBS,IAAhB,GAAuB,EAAE,SAASb,WAAX,EAAwB,QAASC,UAAjC,EAAvB;;AAEA;AACA,WAAOa,KAAKC,SAAL,CAAeX,eAAf,CAAP;AACH,CApBD;;AAsBAY,OAAOC,OAAP,GAAiB,UAASC,WAAT,EAAsB;AACnC,WAAO,IAAIC,OAAJ,CAAY,CAACC,OAAD,EAAUC,MAAV,KAAmB;AAClC3B,gBAAQ;AACJ4B,gCAAoB,KADhB;AAEJC,qBAAS;AACL,gCAAgB,kBADX;AAEL,iCAAiB,YAAYxB;AAFxB,aAFL;AAMJyB,iBAAK3B,MAND;AAOJ4B,kBAAMvB,aAAagB,WAAb,CAPF;AAQJQ,oBAAQ;AARJ,SAAR,EASG,CAACC,GAAD,EAAMC,GAAN,EAAWH,IAAX,KAAkB;AAClB,gBAAG,CAACE,GAAD,IAAQC,IAAIC,UAAJ,KAAmB,GAA9B,EAAmC;AAC/BC,wBAAQC,GAAR,CAAa,0CAAyCjB,KAAKC,SAAL,CAAea,GAAf,CAAoB,EAA1E;AACAR,wBAAQ,IAAR;AACH,aAHD,MAIK;AACAU,wBAAQC,GAAR,CAAa,wCAAuCJ,GAAI,IAAGb,KAAKC,SAAL,CAAea,GAAf,CAAoB,EAA/E;AACAR,wBAAQ,KAAR;AACJ;AACH,SAlBD;AAmBH,KApBM,CAAP;AAqBH,CAtBD","file":"sendgrid_send_email.js","sourcesContent":["const request = require('request');\r\nconst config = require('config');\r\n\r\nconst apiUrl = config.get('sendgrid.apiUrl');\r\nconst apiKey = config.get('sendgrid.apiKey');\r\nconst senderEmail = 'ankan.sircar@gmail.com';\r\nconst senderName = 'Unique App';\r\n\r\nconst getEmailBody = (mail) => {\r\n    let requestSendMail = {}; \r\n    let to = []; \r\n\r\n    mail.toAddress.forEach((item )=> {\r\n        to.push({ \"email\": item }); \r\n    });\r\n\r\n    let personalizations = []; \r\n    personalizations.push({ \"to\": to, \"subject\": mail.subject }); \r\n     \r\n    let content = []; \r\n    content.push({ \"type\":\"text/plain\", \"value\": mail.content });\r\n    \r\n    requestSendMail.personalizations = personalizations; \r\n    requestSendMail.content = content; \r\n    requestSendMail.from = { \"email\": senderEmail, \"name\" : senderName };\r\n\r\n    // console.log(`getEmailBody : ${JSON.stringify(requestSendMail)}`);\r\n    return JSON.stringify(requestSendMail);\r\n};\r\n\r\nmodule.exports = function(mailDetails) {\r\n    return new Promise((resolve, reject)=>{\r\n        request({\r\n            rejectUnauthorized: false,\r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n                'authorization': 'Bearer ' + apiKey\r\n            },\r\n            uri: apiUrl,\r\n            body: getEmailBody(mailDetails),\r\n            method: 'POST'\r\n        }, (err, res, body)=>{\r\n           if(!err && res.statusCode === 202) {                                \r\n               console.log(`Sendgrid request successful. Details : ${JSON.stringify(res)}`);\r\n               resolve(true);\r\n           }\r\n           else {\r\n                console.log(`Sendgrid request failed with error : ${err} ${JSON.stringify(res)}`);\r\n                resolve(false);\r\n           }     \r\n        });\r\n    });    \r\n}"]}